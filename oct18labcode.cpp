#include <NewPing.h>#define TRIGGER_PIN_LEFT  11#define ECHO_PIN_LEFT     10#define TRIGGER_PIN_RIGHT  12#define ECHO_PIN_RIGHT     13#define MAX_DISTANCE 200#define MOTOR_A_1A 2#define MOTOR_A_1B 4#define MOTOR_B_1A 6#define MOTOR_B_1B 8NewPing sonarRight(TRIGGER_PIN_RIGHT, ECHO_PIN_RIGHT, MAX_DISTANCE);NewPing sonarLeft(TRIGGER_PIN_LEFT, ECHO_PIN_LEFT, MAX_DISTANCE);void setup() {  // Motor pins need to be OUTPUT.  Serial.begin(115200);  pinMode(MOTOR_A_1A, OUTPUT);  pinMode(MOTOR_A_1B, OUTPUT);  pinMode(MOTOR_B_1A, OUTPUT);  pinMode(MOTOR_B_1B, OUTPUT);}void wheelABackwards() {  digitalWrite(MOTOR_A_1A, HIGH);  digitalWrite(MOTOR_A_1B, LOW);}void wheelAForwards() {  digitalWrite(MOTOR_A_1A, LOW);  digitalWrite(MOTOR_A_1B, HIGH);}void wheelAStop() {  digitalWrite(MOTOR_A_1A, LOW);  digitalWrite(MOTOR_A_1B, LOW);}void wheelBForwards() {  digitalWrite(MOTOR_B_1A, HIGH);  digitalWrite(MOTOR_B_1B, LOW);}void wheelBBackwards() {  digitalWrite(MOTOR_B_1A, LOW);  digitalWrite(MOTOR_B_1B, HIGH);}void wheelBStop() {  digitalWrite(MOTOR_B_1A, LOW);  digitalWrite(MOTOR_B_1B, LOW);}void loop() { // use the wheel... methods to drive one motor.   delay(250);  Serial.print("Ping Right: ");  Serial.print(sonarRight.ping_cm());  Serial.println("cm");  Serial.print("Ping Left: ");  Serial.print(sonarLeft.ping_cm());  Serial.println("cm");  if (sonarRight.ping_cm() <= 25){   wheelAStop();  } else if (sonarLeft.ping_cm() <= 25){    wheelBStop();  }  else  {   wheelAForwards();   wheelBForwards();     }}